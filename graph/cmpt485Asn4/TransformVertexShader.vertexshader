#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertex_uv;

// Output data ; will be interpolated for each fragment.
//out vec3 fragmentColor;
out vec2 UV;
// Values that stay constant for the whole mesh.
uniform mat4 VP;
uniform mat4 M;

void main(){
    
    // TODO: Replace with Phong shading!

    //vec3 ModelColor = vec3(1, 1, 1);
    //vec4 l = M * vec4(vertexNormal_modelspace,0);
    //fragmentColor = ModelColor * max(0,l.x);
    
	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  VP * M * vec4(vertexPosition_modelspace,1);
    UV = vertex_uv;
}


